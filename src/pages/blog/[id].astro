---
import type { GetStaticPaths } from 'astro'
import { getCollection, render } from 'astro:content'
import readingTime from 'reading-time'

import ContentWrapper from '@/components/ContentWrapper.astro'
import BlogLayout from '@/layouts/BlogLayout'
import getLastUpdatedTimeByFile from '@/pages/api/_services/github/lastUpdatedFile'

export const getStaticPaths = (async () => {
  const blogEntries = await getCollection('blog')

  return blogEntries.map((entry) => {
    return {
      params: { id: entry.id },
      props: { entry }
    }
  })
}) satisfies GetStaticPaths

const { entry } = Astro.props
const { Content, headings } = await render(entry)

const { latestCommitUrl, lastUpdatedTime } = await getLastUpdatedTimeByFile(
  `blog/${entry.id}.mdx`
)

const { minutes } = readingTime(entry.body!)
---

<BlogLayout
  headings={headings}
  id={entry.id}
  updatedDate={new Date(lastUpdatedTime)}
  latestCommitUrl={latestCommitUrl}
  readingTime={Math.ceil(minutes)}
  {...entry.data}
>
  <ContentWrapper content={Content} />
</BlogLayout>
