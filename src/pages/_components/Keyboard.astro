---
import { SOCIAL_MEDIA_DATA } from '@/components/socialMediaData'

interface Props {
  class?: string
}

const { class: className } = Astro.props
---

<!-- keyboard source: https://codepen.io/HaydnComley/pen/yLdpLbJ -->
<div class:list={['flex items-start text-center max-xs:flex-col', className]}>
  <div class='board'>
    {
      SOCIAL_MEDIA_DATA.map(({ name, href, icon: Icon }) => (
        <div class='key-position'>
          <a
            aria-label={name}
            class='key'
            data-key={name}
            target='_blank'
            {...{ href }}
          >
            <Icon />
          </a>
        </div>
      ))
    }
  </div>
  <div class='key-position flex items-center justify-center ml-4 max-xs:ml-0 max-xs:mt-6 max-xs:w-full max-xs:justify-start'>
    <a
      id='cta-hero-btn'
      href='#bento'
      data-block='center'
      class='key call-to-action peer'
    >
      <p class='call-to-action-content text-white'>Explore more</p>
    </a>
  </div>
</div>

<style>
  :root {
    --size: 4.5rem; /* button size */
  }

  svg {
    width: 2rem;
    height: 2rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @media (max-width: 640px) {
    :root {
      --size: 3.5rem;
    }

    svg {
      width: 1.75rem;
      height: 1.75rem;
    }
  }

  .board {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  .key.call-to-action {
    width: 180px;
    font-size: 13px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.08rem;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      'Liberation Mono', 'Courier New', monospace;
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.15) 0%, rgba(5, 150, 105, 0.15) 100%);
    border: 1px solid rgba(16, 185, 129, 0.3);
  }

  .key.call-to-action:hover {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.25) 0%, rgba(5, 150, 105, 0.25) 100%);
    border-color: rgba(16, 185, 129, 0.5);
  }

  .call-to-action-content::after {
    position: absolute;
    content: '';
    width: 0;
    left: 0;
    top: 50%;
    margin: 10px 15%;
    background: rgba(16, 185, 129, 0.8);
    height: 2px;
    transition: 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .key.call-to-action:hover .call-to-action-content::after {
    width: 70%;
  }

  .key-position {
    position: relative;
  }

  .key {
    position: relative;
    width: var(--size);
    height: var(--size);
    border: 1px solid rgba(63, 63, 70, 0.6);
    border-radius: 1rem;
    background: linear-gradient(
      135deg,
      rgba(24, 24, 27, 0.9) 0%,
      rgba(18, 18, 23, 0.95) 100%
    );
    backdrop-filter: blur(10px);
    color: #e4e4e7;
    box-shadow:
      0 1px 2px 0 rgba(0, 0, 0, 0.3),
      0 4px 8px -2px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 0 rgba(255, 255, 255, 0.05);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .key::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 1rem;
    padding: 1px;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      transparent 100%
    );
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  .key::after {
    content: '';
    position: absolute;
    inset: -50%;
    background: radial-gradient(
      circle at center,
      rgba(16, 185, 129, 0.3) 0%,
      transparent 70%
    );
    opacity: 0;
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    pointer-events: none;
  }

  .key:hover {
    cursor: pointer;
    border-color: rgba(16, 185, 129, 0.4);
    box-shadow:
      0 2px 4px 0 rgba(0, 0, 0, 0.4),
      0 8px 16px -4px rgba(0, 0, 0, 0.3),
      0 0 20px -5px rgba(16, 185, 129, 0.3),
      inset 0 1px 0 0 rgba(255, 255, 255, 0.08);
    transform: translateY(-2px);
  }

  .key:hover::after {
    opacity: 1;
  }

  .key:hover svg {
    transform: scale(1.1);
    filter: drop-shadow(0 0 8px rgba(16, 185, 129, 0.4));
  }

  .key:active,
  .key.isDown {
    cursor: pointer;
    transform: translateY(0);
    box-shadow:
      0 1px 2px 0 rgba(0, 0, 0, 0.3),
      0 2px 4px -1px rgba(0, 0, 0, 0.2),
      inset 0 2px 4px 0 rgba(0, 0, 0, 0.3);
    border-color: rgba(16, 185, 129, 0.5);
  }

  /* tooltip source: https://codepen.io/cbracco/pen/nXEQLw */
  /* Add this attribute to the element that needs a tooltip */
  [data-tooltip] {
    position: relative;
    z-index: 2;
    cursor: pointer;
  }

  /* Hide the tooltip content by default */
  [data-tooltip]:before,
  [data-tooltip]:after {
    visibility: hidden;
    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=0)';
    filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);
    opacity: 0;
    pointer-events: none;
  }

  /* Position tooltip above the element */
  [data-tooltip]:before {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 8px;
    padding: 8px 14px;
    border-radius: 8px;
    background: linear-gradient(
      135deg,
      rgba(24, 24, 27, 0.98) 0%,
      rgba(18, 18, 23, 0.98) 100%
    );
    backdrop-filter: blur(10px);
    border: 1px solid rgba(63, 63, 70, 0.5);
    color: #e4e4e7;
    content: attr(data-tooltip);
    text-align: center;
    font-size: 13px;
    font-weight: 500;
    line-height: 1.4;
    white-space: nowrap;
    z-index: 2;
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.3),
      0 10px 15px -3px rgba(0, 0, 0, 0.2);
  }

  /* Triangle hack to make tooltip look like a speech bubble */
  [data-tooltip]:after {
    position: absolute;
    bottom: 100%;
    left: 50%;
    margin-left: -6px;
    margin-bottom: 2px;
    width: 0;
    border-top: 6px solid rgba(24, 24, 27, 0.98);
    border-right: 6px solid transparent;
    border-left: 6px solid transparent;
    content: ' ';
    font-size: 0;
    line-height: 0;
  }

  /* Show tooltip content on hover */
  [data-tooltip]:hover:before,
  [data-tooltip]:hover:after {
    visibility: visible;
    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=100)';
    filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=100);
    opacity: 1;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
  }
</style>
